// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StoreSidebar component should be rendered correctly 1`] = `
<Routes>
  <Route
    path="redirect"
    render={[Function]}
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(DiscoverWrapper))))) />}
    path="discover/*"
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(MyApplicationsWrapper))))) />}
    path="myapps/*"
  />
  <Route
    element={
      <Navigate
        replace={true}
        to="myapps"
      />
    }
    path="*"
  />
</Routes>
`;

exports[`StoreSidebar component should not render if nav is disabled using search flag 1`] = `
<Routes>
  <Route
    path="redirect"
    render={[Function]}
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(DiscoverWrapper))))) />}
    path="discover/*"
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(MyApplicationsWrapper))))) />}
    path="myapps/*"
  />
  <Route
    element={
      <Navigate
        replace={true}
        to="myapps"
      />
    }
    path="*"
  />
</Routes>
`;

exports[`StoreSidebar component should not render if nav is enabled but only one store part is displayed and we are on mobile 1`] = `
<Routes>
  <Route
    path="redirect"
    render={[Function]}
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(DiscoverWrapper))))) />}
    path="discover/*"
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(MyApplicationsWrapper))))) />}
    path="myapps/*"
  />
  <Route
    element={
      <Navigate
        replace={true}
        to="myapps"
      />
    }
    path="*"
  />
</Routes>
`;

exports[`StoreSidebar component should not render if nav is enabled but only one store part is displayed and we are on tablet 1`] = `
<Routes>
  <Route
    path="redirect"
    render={[Function]}
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(DiscoverWrapper))))) />}
    path="discover/*"
  />
  <Route
    element={<withI18n(Connect(withI18n(withBreakpoints(withRouterUtils(MyApplicationsWrapper))))) />}
    path="myapps/*"
  />
  <Route
    element={
      <Navigate
        replace={true}
        to="myapps"
      />
    }
    path="*"
  />
</Routes>
`;
